{"mode":"python","xmlText":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"yolobit_events_timer\" id=\"_|/Z}xP{1XCYo=9(!,qC\" x=\"0\" y=\"0\"><value name=\"INTERVAL\"><shadow type=\"math_number\" id=\"hIzi5~e@=~?9Ogt|lI`7\"><field name=\"NUM\">30</field></shadow></value><statement name=\"ACTION\"><block type=\"aiot_dht_measure\" id=\"a$r,eRGVQe5dwJ]/*{Ao\"></block></statement></block></xml>","python":"from event_manager import *\nfrom machine import Pin, SoftI2C\nfrom aiot_dht20 import DHT20\nfrom yolobit import *\nfrom aiot_rgbled import RGBLed\nfrom keypad121 import MPR121\nfrom aiot_lcd1602 import LCD1602\nimport time\nimport sys\nimport uselect\n\n# INIT, SHOW_DHT, SHOW_PASS_MESS, ENTER_PASS, CHECK_PASS, WRONG_PASS, UNLOCK_DOOR\n\n\nbutton_a.on_pressed = None\nbutton_b.on_pressed = None\nbutton_a.on_pressed_ab = button_b.on_pressed_ab = -1\n\npw_index = 0\npw = \"\"\n\nmypw = [\"123444\", \"123555\"]\n\nevent_manager.reset()\n\naiot_dht20 = DHT20(SoftI2C(scl=Pin(22), sda=Pin(21)))\nkeypad = MPR121(SoftI2C(scl=Pin(22), sda=Pin(21)))\naiot_lcd1602 = LCD1602()\ntiny_rgb = RGBLed(pin0.pin, 4)\n\ndef read_terminal_input():\n  spoll=uselect.poll()        # Set up an input polling object.\n  spoll.register(sys.stdin, uselect.POLLIN)    # Register polling object.\n\n  input = ''\n  if spoll.poll(0):\n    input = sys.stdin.read(1)\n\n    while spoll.poll(0):\n      input = input + sys.stdin.read(1)\n\n  spoll.unregister(sys.stdin)\n  return input\n\ndef on_event_timer_callback_dht():\n  global lightStatus, message, temp, humi\n  aiot_dht20.read_dht20()\n  temp = aiot_dht20.dht20_temperature()\n  humi = aiot_dht20.dht20_humidity()\n  # lightSensor()\n  print('!TEMP:'+ str(temp) +'#')\n  print('!HUMI:'+ str(humi) +'#')\n\nevent_manager.add_timer_event(30000, on_event_timer_callback_dht)\n\ndef on_event_timer_callback_fsm():\n  readSerial()\n  lightControl()\n  fanControl()\n  access_fsm()\n\nevent_manager.add_timer_event(50, on_event_timer_callback_fsm)\n\ndef access_fsm():\n  global temp, humi, counter, status, pw_index, pw\n  if status == 'INIT':\n    status = 'SHOW_DHT'\n    counter = 5000/50\n    pw_index = 0\n    pw = \"\"\n  elif status == 'SHOW_DHT':\n    counter = counter - 1\n    aiot_lcd1602.move_to(0, 0)\n    aiot_lcd1602.putstr('Temp: '+ str(int(temp)))\n    aiot_lcd1602.move_to(0, 1)\n    aiot_lcd1602.putstr('Humi: ' + str(int(humi)))\n    if counter == 0:\n      status = 'SHOW_PASS_MESS'\n      counter = 5000/50\n      aiot_lcd1602.clear()\n    \n    if(keypad.check_keypad() == '*'):\n      status = \"ENTER_PASS\"\n      counter = 10000/50\n      aiot_lcd1602.clear()\n      aiot_lcd1602.move_to(0, 0)\n      aiot_lcd1602.putstr(\" ENTER PASSWORD \")\n      \n  elif status == 'SHOW_PASS_MESS':\n    counter = counter - 1\n    aiot_lcd1602.move_to(0, 0)\n    aiot_lcd1602.putstr(\"  PRESS * FOR   \")\n    aiot_lcd1602.move_to(0, 1)\n    aiot_lcd1602.putstr(\"    PASSWORD    \")\n    if counter == 0:\n      status = 'SHOW_DHT'\n      counter = 5000/50\n      aiot_lcd1602.clear()   \n      \n    if(keypad.check_keypad() == '*'):\n      status = \"ENTER_PASS\"\n      counter = 10000/50\n      aiot_lcd1602.clear()\n      aiot_lcd1602.move_to(0, 0)\n      aiot_lcd1602.putstr(\" ENTER PASSWORD \")\n  \n  elif status == \"ENTER_PASS\":\n    counter = counter - 1;\n    if(pw_index < 6):\n      if(getButtonNumber()):\n        counter = 10000/50\n        aiot_lcd1602.move_to(pw_index,1)\n        aiot_lcd1602.putstr(\"*\")\n        pw_index = pw_index + 1\n    else:\n      aiot_lcd1602.move_to(0, 0)\n      aiot_lcd1602.putstr(\"PRESS * TO ENTER\")\n      if(keypad.check_keypad() == '*'):\n        status = \"CHECK_PASS\"\n    \n    if(counter == 0):\n      status = \"INIT\"\n  \n  elif status == \"CHECK_PASS\":\n    if(check_pass() == True):\n      status = \"UNLOCK_DOOR\"\n    else:\n      status = \"WRONG_PASS\" \n      counter = 3000/50\n      aiot_lcd1602.clear()\n      aiot_lcd1602.move_to(0, )\n      aiot_lcd1602.putstr(\"WRONG_PASS\")\n  elif status == \"WRONG_PASS\":\n    counter = counter - 1\n    if(counter == 0): status = \"INIT\"\n\n  def check_pass():\n    global pw, mypw\n    for x in mypw:\n      if x == pw:\n        return True\n    return False\n  \ndef readSerial():\n  global lightStatus, fanStatus, lightAuto, message\n  message = \"\"\n  message = read_terminal_input()\n  if message == 'A':\n    lightStatus = 1\n  elif message == 'B':\n    lightStatus = 0\n  elif message == 'C':\n    lightAuto = 1\n  elif message == 'D':\n    lightAuto = 0\n  elif message == 'E':\n    fanStatus = 100\n  elif message == 'F':\n    fanStatus = 50\n  elif message == 'G':\n    fanStatus = 0\n  \n# event_manager.add_timer_event(100, on_event_timer_callback_serial)\n\ndef on_button_a_pressed():\n  global lightStatus, lightAuto\n  if lightAuto == 1:\n    lightAuto = 0\n    print('!AUTO_LIGHT:' + str(lightAuto) + '#')\n  \n  if lightStatus == 0:\n    lightStatus = 1\n  else:\n    lightStatus = 0\n  print('!LIGHT:' + str(lightStatus) + '#')\n  aiot_lcd1602.clear()\n\nbutton_a.on_pressed = on_button_a_pressed\n\ndef on_button_b_pressed():\n  global fanStatus\n  fanStatus = fanStatus - 50\n  if fanStatus < 0:\n    fanStatus = 100\n  print('!FAN:' + str(fanStatus) + '#')\n  aiot_lcd1602.clear()\n\nbutton_b.on_pressed = on_button_b_pressed\n\ndef lightSensor():\n  global lightAuto, lightSensor, lightStatus\n  lightSensor = translate((pin2.read_analog()), 0, 4095, 0, 100)\n  if lightAuto == 1:\n    if lightSensor >  30:\n      lightStatus = 0\n    else :\n      lightStatus = 1\n  print('!LIGHT_SENSOR:'+ str(lightSensor) + '#')\n\ndef lightControl():\n  global lightStatus\n  if lightStatus == 0:\n    # display.clear_pixel(0, 0)\n    tiny_rgb.show(0, hex_to_rgb('#000000'))\n  elif lightStatus == 1:\n    # display.set_pixel(0, 0, '#ff0000')\n    tiny_rgb.show(0, hex_to_rgb('#ffffff'))\n\ndef fanControl():\n  global fanStatus\n  # if(fanStatus == 0):\n  #   display.clear_pixel(0, 1)\n  # elif fanStatus == 50:\n  #   display.set_pixel(0, 1, '#00ff00')\n  # elif fanStatus == 100:\n  #   display.set_pixel(0, 1, '#ff0000')\n  pin1.write_analog(round(translate(fanStatus, 0, 100, 0, 1023)))\n\ndef getButtonNumber():\n  global pw\n  buffer = keypad.check_keypad()\n  if buffer >= '0' and buffer <= '9' :\n    pw = pw + buffer\n    return True\n  return False\n  \nif True:\n  lightStatus = 0\n  fanStatus = 0\n  lightAuto = 0\n  temp = 0\n  humi = 0\n  counter = 0\n  lightSensor = 0\n  status = 'INIT'\n  aiot_lcd1602.backlight_on()\n  aiot_lcd1602.clear()\n  display.scroll('IOT')\n  \nwhile True:\n  event_manager.run()\n  time.sleep_ms(10)\n","name":"smarthome_g","extensions":[{"id":"yolobit-AITT-VN-yolobit_extension_aiot","src":"https://github.com/AITT-VN/yolobit_extension_aiot","name":"AIOT Kit","description":"Mục mở rộng dành cho bộ kit AIoT"},{"id":"yolobit-AITT-VN-yolobit_extension_events","src":"https://github.com/AITT-VN/yolobit_extension_events","name":"SỰ KIỆN","description":"Mục mở rộng hỗ trợ sử dụng sự kiện trong chương trình"}],"device":"yolobit"}